#  1. Create a new workflow file (ex. Pylint.yml)
#  2. Add a job named "build" and make it run on "ubuntu-latest" container.
#  3. Add step provided by Github â€“ actions/checkout@v2
#  4. Add step to setup Python 3.9 - actions/setup-python@v2
#  5. Add step to install dependencies - "python â€“m pip install â€“upgrade pip" ; "pip install pylint"
#  6. Add step to lint the python code from the repository
#  7. Commit, push and watch the Action.

name: pylint
on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "this has been triggered ${{ github.event_name }} event"
      - run: echo "this job is running on ${{ runner.os }} server"
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install pycodestyle
      - name: Lint with Pylint
        run: |
          python lint_test.py
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Lint with pycodestyle
        run: |
          pycodestyle *.py
      - name: Unit testing
        run: |
          python3 -m doctest factorial.py
      - name: Build Container Image
        run: |
          echo "Building a container image..."
          sleep 10
          echo "Container built successfully!"
      - name: Deploy to cluster
        run: |
          echo "Deploying to web cluster using rolling deployment..."
          sleep 10
          echo "ðŸŽ‰ App has been deployed successfully!"
      - run: echo "This job's status is ${{ job.status }}."
